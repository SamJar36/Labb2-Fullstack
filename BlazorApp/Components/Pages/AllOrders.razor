@page "/all-orders"
@rendermode InteractiveServer
@using Shared
@inject HttpClient Http

<h3>All Orders</h3>

@if (allOrders == null)
{
    <p>Loading...</p>
}
else if (!allOrders.Any())
{
    <p>No orders found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Order Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in allOrders)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.Customer?.FirstName</td>
                    <td>@order.Customer?.LastName</td>
                    <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                    <td>@order.Status.ToString()</td>
                    <td>
                        <button class="btn btn-info btn-sm" @onclick="@(() => ViewOrder(order.Id))">View</button>
                        <button class="btn btn-warning btn-sm" @onclick="@(() => EditOrder(order.Id))">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="@(() => DeleteOrder(order.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<Order> allOrders = new();

    protected override async Task OnInitializedAsync()
    {
        allOrders = await Http.GetFromJsonAsync<List<Order>>("api/orders");
    }
    public void ViewOrder(int id)
    {

    }
    public void EditOrder(int id)
    {

    }
    public void DeleteOrder(int id)
    {
        
    }
}
