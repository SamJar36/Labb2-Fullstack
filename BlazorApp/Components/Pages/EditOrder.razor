@page "/edit-order/{orderId:int}"
@rendermode InteractiveServer
@using Shared
@inject HttpClient Http

<h3>Edit Order</h3>

@if (editedOrder != null)
{
	<div class="mb-3">
		<label>Status:</label>
		<select @bind="editedOrder.Status" class="form-select" style="width: 200px;">
			@foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
			{
				<option value="@status">@status</option>
			}
		</select>
	</div>

	<button class="btn btn-primary" @onclick="SubmitChanges">Submit</button>
	@if (isSuccess)
	{
		<p>Order edited successfully!</p>
	}
}

@code {
	[Parameter]
	public int orderId { get; set; }
	private Order editedOrder { get; set; } = new Order();
	private List<Order> allOrders { get; set; }
	private bool isSuccess;

	protected override async Task OnParametersSetAsync()
	{
		allOrders = await Http.GetFromJsonAsync<List<Order>>("api/orders");
		editedOrder = allOrders.FirstOrDefault(o => o.Id == orderId);
	}
	public async Task SubmitChanges()
	{
		var updateDto = new OrderStatusUpdateDto
			{
				Id = editedOrder.Id,
				Status = editedOrder.Status
			};

		var response = await Http.PutAsJsonAsync("api/orders/status", updateDto);

		if (response.IsSuccessStatusCode)
		{
			isSuccess = true;
		}
	}
}
